{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst UseInput = validateValue => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n    if (event.target.value.trim() !== \"\") {\n      return;\n    }\n  };\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n    if (!valueIsValid) {\n      return;\n    }\n  };\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(UseInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n_c = UseInput;\nexport default UseInput;\nvar _c;\n$RefreshReg$(_c, \"UseInput\");","map":{"version":3,"names":["useState","UseInput","validateValue","_s","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","trim","inputBlurHandler","reset","isValid","_c","$RefreshReg$"],"sources":["N:/Masai Coading imp/MiniProjects/Mini-Projects/Form-and-Validation/src/Hooks/use-input.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst UseInput = (validateValue) => {\r\n    const [enteredValue, setEnteredValue] = useState(\"\");\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        setEnteredValue(event.target.value);\r\n        if (event.target.value.trim() !== \"\") {\r\n            return;\r\n        }\r\n    };\r\n\r\n    const inputBlurHandler = () => {\r\n        setIsTouched(true);\r\n        if (!valueIsValid) {\r\n            return;\r\n        }\r\n    };\r\n\r\n    const reset=()=>{\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid:valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        reset\r\n    };\r\n};\r\nexport default UseInput;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,YAAY,GAAGN,aAAa,CAACE,YAAY,CAAC;EAChD,MAAMK,QAAQ,GAAG,CAACD,YAAY,IAAIF,SAAS;EAE3C,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnC,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAClC;IACJ;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BR,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI,CAACC,YAAY,EAAE;MACf;IACJ;EACJ,CAAC;EAED,MAAMQ,KAAK,GAACA,CAAA,KAAI;IACZX,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACHM,KAAK,EAAET,YAAY;IACnBa,OAAO,EAACT,YAAY;IACpBC,QAAQ;IACRC,kBAAkB;IAClBK,gBAAgB;IAChBC;EACJ,CAAC;AACL,CAAC;AAACb,EAAA,CAlCIF,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}